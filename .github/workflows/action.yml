name: "Action AWS OIDC Auth"

on:
  push:
    branches:
    - main

jobs:
  OIDC:
    runs-on: ubuntu-latest
    steps:
        - name: AWS OIDC Auth
          uses: aws-actions/configure-aws-credentials@v1
          with:
              role-to-assume: "arn:aws:iam::686366197843:role/github-oidc-role"
              aws-region: "us-east-1"
        - name: Get ID Token
          id: get-token
          uses: actions/github-script@v6
          with:
              script: |
                  const token = await core.getIDToken('sts.amazonaws.com');
                  const payload = {token: token};
                  return JSON.stringify(payload);
              result-encoding: string
        - name: Invoke auth lambda
          run: |
              aws lambda invoke --function-name github-oidc-auth \
                --cli-binary-format raw-in-base64-out \
                --payload '${{ steps.get-token.outputs.result }}' \
                $RUNNER_TEMP/response.json
          shell: bash
        - name: Set auth outputs
          uses: actions/github-script@v6
          id: auth-outputs
          with:
              script: |
                  const fs = require("fs");
                  const creds = JSON.parse(fs.readFileSync(process.env.RUNNER_TEMP + "/response.json"));
                  core.setOutput("ACCESS_KEY_ID", creds.Credentials.AccessKeyId);
                  core.setSecret(creds.Credentials.AccessKeyId);
                  core.setOutput("SECRET_ACCESS_KEY", creds.Credentials.SecretAccessKey);
                  core.setSecret(creds.Credentials.SecretAccessKey);
                  core.setOutput("SESSION_TOKEN", creds.Credentials.SessionToken);
                  core.setSecret(creds.Credentials.SessionToken);
                  fs.unlinkSync(process.env.RUNNER_TEMP + "/response.json")
        - name: AWS Auth with final role
          uses: aws-actions/configure-aws-credentials@v1
          with:
              aws-access-key-id: ${{ steps.auth-outputs.outputs.ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ steps.auth-outputs.outputs.SECRET_ACCESS_KEY }}
              aws-session-token: ${{ steps.auth-outputs.outputs.SESSION_TOKEN }}
              aws-region: ${{ inputs.aws-region }}
